import Test.Tasty
import Test.Tasty.HUnit

import Data.Matrix
import qualified Lib

import OpTests (moveTests, testBoard, captureTests, startBoard)

main :: IO ()
main = defaultMain tests

tests :: TestTree
tests = testGroup "Tests" [matrixTests, moveTests, captureTests]

matrixTests :: TestTree
matrixTests= testGroup "Matrix type tests"
  [ testCase "Board setup" $
    toLists Lib.setBoard @?= startBoard,
    testCase "Fast matrix init" $
    toLists (Lib.setWeights Lib.setBoard) @?= [
                                              [(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0), --Red
                                              (0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0)],
                                              [(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),
                                              (0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0)],
                                              [(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),
                                              (0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0)],

                                              [(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0), --Middle
                                              (0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0)],
                                              [(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),
                                              (0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,0.0,0.0)],

                                              [(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0), --White
                                              (0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0)],
                                              [(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),
                                              (0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0)],
                                              [(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),
                                              (0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0),(0.0,0.0,1.0,0.0),(0.0,0.0,0.0,0.0)]
                                              ],
    testCase "Map simple const test" $
    toLists (Lib.mapMat (fromLists testBoard) (\_ _ _ -> (1.0,0.0,0.0,0.0))) @?= [
                                              [(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0), --Red
                                              (1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0)],
                                              [(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),
                                              (1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0)],
                                              [(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),
                                              (1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0)],

                                              [(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0), --Middle
                                              (1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0)],
                                              [(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),
                                              (1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0)],

                                              [(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0), --White
                                              (1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0)],
                                              [(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),
                                              (1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0)],
                                              [(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),
                                              (1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0),(1.0,0.0,0.0,0.0)]
                                              ]
  ]
